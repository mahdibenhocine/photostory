name: Deploy Terraform and Prototype App

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  AWS_ACCOUNT_ID: "025066267440"
  S3_BUCKET: amir-photostory-s3-repo
  CLOUDFRONT_DISTRIBUTION_ID: ES6ZB8XJ2PHU4

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          trivy --version

      - name: Scan Terraform for Vulnerabilities
        run: trivy fs --security-checks config terraform/

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform

  build-and-deploy:
    name: Build Prototype App and Deploy
    runs-on: ubuntu-latest
    needs: terraform

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Install Dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
        working-directory: .
        
      - name: Build Prototype App   
        run: npm run build
        working-directory: .
    
      - name: Sync dist/ to S3
        run: aws s3 sync dist/ s3://$S3_BUCKET --delete
        working-directory: .

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
            --paths "/*"

